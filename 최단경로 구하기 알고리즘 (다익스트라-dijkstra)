다익스트라 알고리즘은 다이나믹 프로그래밍을 활용한 대표적인 최단경로 탐색 알고리즘 입니다.




def dijkstra():
    import heapq
    import sys
    
    V, E = map(int, input().split())
    K = int(input())
    INF = 10 * V +1
    distance = [[] for _ in range(V+1)]
    
    for _ in range(E):
        start, end, dist = map(int, sys.;stdin.readline().split())
        distance[start].appen([end, dist])
        
        
    queue = []
    K_distance = [INF for _ in range(V+1)]
    K_distance[K] = 0
    heapq.heappush(queue, [0, K])
    
    while queue:
        mid = heapq.heappop(queue)
        for end in distance[mid[1]]:
            if K_distance[end[0]] > mid[0] + end[1]:
                K_distance[end[0]] = mid[0] + end[1]
                heapq.heappush(queue, [K_distance[end[0]], end[0]])
                
                
    for i in range(1, V+1):
        if K_distance[i] == INF:
            print('INF')
        else:
            print(K_distance[i])





